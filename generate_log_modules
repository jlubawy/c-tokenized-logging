#!/usr/bin/env python

import sys

from optparse import OptionParser
from os import path

OUTPUT_FILE_HEADER = """/* DO NOT MODIFY - AUTO-GENERATED */
#ifndef LOG_MODULES_H
#define LOG_MODULES_H

/* Log module definitions */
"""

OUTPUT_FILE_FOOTER = """
#endif
"""

def walker(modules, dirname, names):
    for name in names:
        p = path.join(dirname, name)

        if path.isfile(p):
            root, ext = path.splitext(p)
            if ext == '.c':
                module = path.basename(root)
                if module in modules:
                    print "Module '%s' was found more than once" % (module)
                    sys.exit(1)

                modules.append(module)


def main(parser):
    # Parse options and arguments
    options, args = parser.parse_args()

    if len(args) != 1:
        print "Must specify search path for C source files.\n"
        parser.print_help()
        sys.exit(1)

    # Gather the C source file modules
    modules = []
    path.walk(args[0], walker, modules)
    modules = sorted(modules)

    # If no modules/source files were found then exit with error
    if len(modules) == 0:
        print "No C source files found."
        sys.exit(1)

    # Write log module header
    f = sys.stdout if options.filename == '-' else open(options.filename, 'w')
    f.write(OUTPUT_FILE_HEADER)
    n = 0
    for module in modules:
        f.write("#define LOG_MODULE_%-32s  (%d)\n" % (module, n))
        n += 1
    f.write(OUTPUT_FILE_FOOTER)
    f.close()


if __name__ == "__main__":
    parser = OptionParser("usage: %prog [OPTIONS] <search path>")
    parser.add_option("--output", dest="filename", help="write generated log module header to FILE", metavar="FILE", default="-")

    main(parser)
